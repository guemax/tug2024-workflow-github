name: Automated testing

# Currently we run in two situations:
on:
  # 1) Whenever someone pushes to a branch
  push:
  # 2) Whenever a pull request is opened, reopened or gets new commits.
  pull_request:
# This implies that for every push to a local branch in our repo for which a
# pull request is open this runs twice. But it's important to ensure that pull
# requests get tested even if their branch comes from a fork.

# Cancel running builds on push on the same branch or pull request
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  l3build:
    runs-on: ${{(matrix.platform == 'Linux' && 'ubuntu-22.04') || (matrix.platform == 'Windows' && 'windows-2022') || (matrix.platform == 'macOS' && 'macos-14')}}
    strategy:
      matrix:
        kind: [test]
        # We use more redable names here. The enables updating the concrete runners without changing the names
        platform: [Linux, Windows, macOS]
        include:
          # include indicates that we want to add explicitly these combinations.
          #
          # IMPORTANT: artifact_name == "doc" is used as a trigger to
          #   generate the artifact from PDF files and not the build directory and
          #   to generate the artifact when the run is successfu (not when it fails).
          - kind: doc
            platform: Linux
    name: "${{ format('{0} - {1}', matrix.kind == 'doc' && 'Documentation' || 'Test suite', matrix.platform) }}"
    steps:
      # Boilerplate
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          show-progress: 'false'
      - name: Install TeX Live
        uses: zauguin/install-texlive@v3
        with:
          # The list of packages to install is in a separate file under .github/tl_packages
          # to allow reuse.
          package_file: .github/tl_packages
          cache_version: 0
      - name: Run l3build
        # Create the l3build command based on the actual 
        run: ${{ format('l3build {0} -q -H', matrix.kind == 'doc' && 'doc' || 'check --show-log-on-error') }}
      # Now we create the artifacts: There are two cases where this happens.
      # 1. If we failed running tests
      - name: Archive failed test output
        if: ${{ matrix.kind == 'test' && always() }}
        uses: zauguin/l3build-failure-artifacts@v1
        with:
          name: testfiles-${{ matrix.platform }}
          # Decide how long to keep the test output artifact:
          retention-days: 3
      # 2. If we succeed building documentation
      - name: Archive documentation
        if: ${{ matrix.kind == 'doc' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Documentation
          path: "build/doc/*.pdf"
          # Decide how long to keep the test output artifact:
          retention-days: 21
